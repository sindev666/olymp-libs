#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

// /*
//                                                //////////**DEFINES - START**//////////

#define ret return
#define fi first
#define se second
#define mp make_pair
#define all(x) x.begin(), x.end()
#define be(x) x.begin()
#define en(x) x.end()
#define sz(x) x.size()
#define for0(i, n) for (ll   i = 0; i < (n); ++i)
#define for1(i, n) for (ll   i = 1; i < (n); ++i)
#define rfor0(i, n) for (ll   i = (n) - 1; i >= 0; --i)
#define rfor1(i, n) for (ll   i = (n) - 1; i >= 1; --i)
#define rep(i, a, n) for (ll   i = a; i < ll(n); ++i)
#define rrep(i, a, n) for (ll   i = a - 1; i >= ll(n); --i)
#define popcount __builtin_popcount
#define popcountll __builtin_popcountll
#define fastIO() ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define con continue
#define pb push_back
#define pob pop_back
#define deb(x) cout << (#x) << " is " << (x) << endl
#define ins insert
#define len(s) (s).length()
#define gi greater<int>()
#define gll greater<ll  >()
#define gstr greater<string>()
#define gpll greater<pair<ll  , ll  >>()
#define rast(x1, y1, x2, y2) sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))
#define rev reverse
#define ub upper_bound
#define lb lower_bound
#define bs binary_search
#define rs resize
#define last(a) a.back()
#define co count
#define ba(a) a.back()
#define um unordered_map
#define rsun(a) a.resize(unique(a.begin(),a.end())-a.begin())
//#define endl '\n'
//#define sqrt sqrt1
#ifdef OG_Matveychick1
bool local = true;
#else
bool local = false;
#endif

//                                                \\\\\\\\\\**DEFINES - END**\\\\\\\\\\
// */

// /*
//                                                //////////**TYPEDEFS - START**//////////

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<char> vc;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<ull> vull;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef pair<double, double> pdd;
typedef long double ld;
typedef double D;
typedef vector<ld> vld;
typedef vector<pair<ld, ld>> vpld;
typedef string str;
typedef set<ll> sll;
typedef set<int> si;
typedef set<str> ss;
typedef set<pii> spii;
typedef multiset<int> msi;
typedef multiset<ll> msll;
typedef multiset<str> mss;
typedef multiset<pii> mspii;
typedef multiset<pll> mspll;
typedef map<str, str> mps;
typedef map<int, int> mpi;
typedef map<ll, ll> mpll;
typedef map<int, vi> mpvi;
typedef map<int, vll> mpvll;
typedef map<char, int> mpci;
typedef multimap<ll, ll> mmpll;
typedef multimap<str, str> mmps;
typedef multimap<int, int> mmpi;
typedef vector<vector<int>> vvi;
typedef vector<vector<ll  >> vvll;
typedef vector<vector<long double>> vvld;
typedef vector<vector<char>> vvc;
typedef vector<vs> vvs;
typedef vector<D> vD;
typedef set<pair<ll, ll>> spll;
typedef pair<ull, ull> pull;
typedef vector<pull> vpull;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef set<char> sc;
typedef queue<int> qi;
typedef queue<ll> qll;
typedef queue<bool> qb;
typedef vector<sll> vsll;
typedef queue<pair<ll, ll>> qpll;
typedef vector<vector<pair<int, int>>> vvpii;
typedef vector<vector<pair<ll, ll>>> vvpll;
typedef vector<spll> vspll;
typedef multiset<char> msc;
typedef queue<str> qs;
typedef vector<set<int>> vsi;
typedef priority_queue<ll> pqll;
typedef vector<vsll> vvsll;
typedef pair<ld, ld> pld;
typedef vector<vvll> vvvll;
typedef set<ld> sld;
typedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

//                                                \\\\\\\\\\**TYPEDEFS - END**\\\\\\\\\\
// */


// /*
//                                                //////////**CONSTANTS - START**//////////

const long double pi = 3.141592653589793238462643383279;
const ll mod1 = 1e9 + 7;
const ll mod2 = 998244353;
const ll MAXLL = 9223372036854775807;
const ll MAXINT = 2147483647;
const long double eps = 1e-9;

//                                                \\\\\\\\\\**CONSTANTS - END**\\\\\\\\\\
// */


// /*
//                                                //////////**TEMPLATES - START**//////////


template<typename T>
istream &operator>>(istream &in, vector<T> &a) {
    for (T &i: a) in >> i;
    return in;
}

template<typename T1, typename T2>
istream &operator>>(istream &in, pair<T1, T2> &a) {
    cin >> a.fi >> a.se;
    return in;
}

template<typename T1, typename T2>
ostream &operator<<(ostream &out, pair<T1, T2> &a) {
    cout << a.fi << " " << a.se;
    return out;
}

template<typename T1, typename T2>
istream &operator>>(istream &in, vector<pair<T1, T2>> &a) {
    for (pair<T1, T2> &i: a) in >> i.fi >> i.se;
    return in;
}

template<typename T>
ostream &operator<<(ostream &out, const vector<T> &a) {
    for (auto i: a) {
        out << i << " ";
    }
    return out;
}

template<typename T1, typename T2>
ostream &operator<<(ostream &out, vector<pair<T1, T2>> &a) {
    for (pair<T1, T2> i: a) out << i.fi << " " << i.se << endl;
    return out;
}

template<typename T1>
ostream &operator<<(ostream &out, vector<vector<T1>> &a) {
    for (vector<T1> i: a) {
        for (T1 j: i) out << j << " ";
        out << endl;
    }
    return out;
}

template<typename T1, typename T2>
inline T1 min(T1 a, T2 b) {
    b = (T1) b;
    return a > b ? b : a;
}

template<typename T1, typename T2>
inline T1 max(T1 a, T2 b) {
    b = (T1) b;
    return a > b ? a : b;
}

template<typename T1, typename T2>
inline void amin(T1 &a, T2 b) {
    a = min(a, b);
}

template<typename T1, typename T2>
inline void amax(T1 &a, T2 b) {
    a = max(a, b);
}


//                                                \\\\\\\\\\**TEMPLATES - END**\\\\\\\\\\
// */




// This bear is a good alternative to duck!!!
/*
    ▒▒▒▒      ▒▒▒▒▒▒
  ▒▒░░░░▒▒▒▒▒▒▒░░░░▒▒
 ▒▒░░░░░░▒▒▒▒▒░░░  ░▒▒
▒▒░   ░░▒▒▒▒▒▒▒░░  ░▒▒
▒▒░  ░▒▒▒▒▒▒▒▒▒▒▒ ░▒
 ▒░░▒▒▒▒▒▒█▒▒▒▒▒█▒▒
   ▒▒▒▒▒▒░██▒▒▒▒██ ▒
   ▒▒▒▒▒░░░░███░░░▒▒
   ▒▒▒▒▒░░   ███    ▒▒
    ▒▒░░  ▀▄▄▄▄▄▄▀░▒
     ▒▒▒░     ▀▀ ░▒▒
   ▒▒▒░▒░░░▒▒▒░ ▒▒▒▒▒
  ▒▒▒░▒▒▒▒▒░░░▒░▒▒▒▒▒▒
 ▒▒▒░▒▒▒▒   ▒▒  ▒▒▒▒▒▒▒
 ▒▒▒░▒░░         ░▒▒▒▒
 */



double getTime() {
    return clock() / (double) CLOCKS_PER_SEC;
}

mt19937_64 rn(chrono::steady_clock::now().time_since_epoch().count());
//mt19937_64 rn(0);

ll rnd(ll l, ll r) {
    ll a = rn() % (r - l + 1) + l;
    ret a;
}

void solve();

signed main() {
    //setlocale(LC_ALL, "rus");
    fastIO()
    if (local) {
        //freopen("input.txt", "r", stdin);
        //freopen("output.txt", "w", stdout);
    }
    ll t = 1;
    cin >> t;
    while (t--) {
        solve();
    }
    if (local) {
        cout.precision(32);
        cout << endl << fixed << "time = " << getTime();
    }
    return 0;
}


/*
	___        __              __   ______          __        _____ __             __          __  __
   /   | _____/ /___  ______ _/ /  / ____/___  ____/ /__     / ___// /_____ ______/ /______   / / / /__  ________
  / /| |/ ___/ __/ / / / __ `/ /  / /   / __ \/ __  / _ \    \__ \/ __/ __ `/ ___/ __/ ___/  / /_/ / _ \/ ___/ _ \
 / ___ / /__/ /_/ /_/ / /_/ / /  / /___/ /_/ / /_/ /  __/   ___/ / /_/ /_/ / /  / /_(__  )  / __  /  __/ /  /  __/
/_/  |_\___/\__/\__,_/\__,_/_/   \____/\____/\__,_/\___/   /____/\__/\__,_/_/   \__/____/  /_/ /_/\___/_/   \___/
*/

#define x fi
#define y se

pll z(ll x1, ll y1, ll x2, ll y2) {
    cout << x1 << " " << y1 << " " << x2 << " " << y2 << endl;
    pll re;
    cin >> re;
    bool bl = (!re.x && !re.y);
    cin >> re;
    ret ((re.x == 0 && re.y == 0 && bl) ? mp(ll(-1e18), ll(-1e18)) : re);
}

pll z(pll a, pll b) {
    cout << a.x << " " << a.y << " " << b.x << " " << b.y << endl;
    pll re;
    cin >> re;
    bool bl = (!re.x && !re.y);
    cin >> re;
    ret ((re.x == 0 && re.y == 0 && bl) ? mp(ll(-1e18), ll(-1e18)) : re);
}

pll to(ll x1, ll y1, ll to) {
    ll v = x1 - y1;
    ret {x1 + (to - v) / 2, y1 - (to - v) / 2};
}

ll get(ll x1, ll y1) {
    ret x1 - y1;
}

ll get(pll t) {
    ret t.x - t.y;
}

void solve() {
    vpll a(5);
    pll t;
    vll b(5);
    cin >> a;
    pll p;
    cin >> p;
    ll cnt = 0;
    for0(i, 5) {
        if ((a[i].x + a[i].y) & 1) cnt++;
    }
    if (cnt < 2 || cnt > 3) {
        cout << "0 0 0 0" << endl;
        ret;
    }
    sort(all(a), [](pll a, pll b) { ret a.x == b.x ? a.y < b.y : a.x < b.x; });
    for0(i, 5) {
        p = z(a[i].x, a[i].y, a[i].x - (5 - i) * 1e8, a[i].y - (5 - i) * 1e8);
        a[i] = {a[i].x - (5 - i) * 1e8, a[i].y - (5 - i) * 1e8};
        b[i] = get(a[i]);
//        if (p == mp(ll(-1e18), ll(-1e18))) {
//            ret;
//        }
    }
    sort(all(a), [](pll a, pll b) { ret (a.x + a.y) % 2 < (b.x + b.y) % 2; });
    swap(a[2], a[4]);
    swap(a[1], a[2]);
//    p = z(a[4], to(a[4].x, a[4].y, 1e8));
//    a[4] = to(a[4].x, a[4].y, 1e8);
//    b[4] = get(a[4]);
//    pll t = {a[4].x - 6e8, a[4].y - 6e8};
//    p = z(a[4].x, a[4].y, t.x, t.y);
//    a[4] = t;
//    b[4] = get(a[4]);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
//    swap(a[1], a[2]);
//    if (a[0].x > a[2].x) swap(a[0], a[2]);
//    if (a[1].x > a[3].x) swap(a[1], a[3]);
//    for0(i, 4) b[i] = a[i].x - a[i].y;
//    p = z(a[0].x, a[0].y, a[0].x - 4e8, a[0].y - 4e8);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
//    a[0] = {a[0].x - 4e8, a[0].y - 4e8};
//    p = z(a[1].x, a[1].y, a[1].x - 3e8, a[1].y - 3e8);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
//    a[1] = {a[1].x - 3e8, a[1].y - 3e8};
//    p = z(a[2].x, a[2].y, a[2].x - 2e8, a[2].y - 2e8);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
//    a[2] = {a[2].x - 2e8, a[2].y - 2e8};
//    p = z(a[3].x, a[3].y, a[3].x - 1e8, a[3].y - 1e8);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
//    a[3] = {a[3].x - 1e8, a[3].y - 1e8};
    t = to(a[0].x, a[0].y, get(p) + 8);
    p = z(a[0], t);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
    a[0] = t;
    b[0] = get(a[0]);
    t = to(a[1].x, a[1].y, b[0] - 1);
    p = z(a[1], t);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
    a[1] = t;
    b[1] = get(a[1]);
    t = to(a[2].x, a[2].y, get(p) - 8);
    p = z(a[2], t);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
    a[2] = t;
    b[2] = get(a[2]);
    t = to(a[3].x, a[3].y, b[2] + 1);
    p = z(a[3], t);
//    if (p == mp(ll(-1e18), ll(-1e18))) {
//        ret;
//    }
    a[3] = t;
    b[3] = get(a[3]);
    if (((a[4].x + a[4].y) % 2)) {
        t = to(a[2].x, a[2].y, b[2] - 2);
        p = z(a[2], t);
        a[2] = t;
        b[2] = get(a[2]);
    }
    while (1) {
        cerr << b << endl;
        if (b[0] > b[1]) {
            t = to(a[0].x, a[0].y, b[0] - 2);
            p = z(a[0], t);
            a[0] = t;
            b[0] = get(a[0]);
        } else {
            t = to(a[1].x, a[1].y, b[1] - 2);
            p = z(a[1], t);
            a[1] = t;
            b[1] = get(a[1]);
        }
        if (min(b[0], b[1]) - max(b[2], b[3]) == 2) {
//            cerr << min(b[0], b[1]) << endl;
            p = z(a[4], to(a[4].x, a[4].y, min(b[0], b[1]) - 1));
            a[4] = to(a[4].x, a[4].y, min(b[0], b[1]) - 1);
            b[4] = get(a[4]);
            cerr << b << endl;
            break;
        }
    }
}
